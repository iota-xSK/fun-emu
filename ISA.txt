- 16 insturctions
0 - lit(register to put it into)
followed by the instruction that is the byte
1 - jmp - jump to addres x|y (high nibble should be kept at 0, reserved for future use)
2 - cjmp(condition register)
 - jumps if the instruction is nonzero
3 - tac(register) - move from register to accumulator
4 - tre (register) - move from accumulator to register
5 - r(into register) - read from memmory in normal addressing mode from addres x|y into register
6 - w(from register) - write into memmory in normal addressing mdoe to address x|y from register
7 - eq(r) - acc = r == acc
8 - cmp(r) - acc = r > acc if magic set, else <
9 - add(r) - acc = r + acc
A - sub(r) - acc = acc - r
B - lsf(r) - acc = acc << r
C - rsf(r) - acc = acc >> r
D - or(r) - acc = acc | r (bitwise)
E - and(r) - acc = acc & r (bitwise)
F - not(r) = acc = ~r (bitwise)
